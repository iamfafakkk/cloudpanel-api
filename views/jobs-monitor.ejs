<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Jobs Queue Monitor - CloudPanel API</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
      tailwind.config = {
        theme: {
          extend: {
            colors: {
              primary: {
                50: "#f0f9ff",
                500: "#3b82f6",
                600: "#2563eb",
                700: "#1d4ed8",
              },
            },
            animation: {
              "fade-in": "fadeIn 0.3s ease-out",
              "fade-out": "fadeOut 0.3s ease-in",
              "scale-in": "scaleIn 0.3s ease-out",
              "scale-out": "scaleOut 0.3s ease-in",
              "pulse-slow": "pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite",
            },
            keyframes: {
              fadeIn: {
                "0%": { opacity: "0" },
                "100%": { opacity: "1" },
              },
              fadeOut: {
                "0%": { opacity: "1" },
                "100%": { opacity: "0" },
              },
              scaleIn: {
                "0%": { opacity: "0", transform: "scale(0.95)" },
                "100%": { opacity: "1", transform: "scale(1)" },
              },
              scaleOut: {
                "0%": { opacity: "1", transform: "scale(1)" },
                "100%": { opacity: "0", transform: "scale(0.95)" },
              },
            },
          },
        },
      };
    </script>
  </head>
  <body class="bg-gray-50 font-sans">
    <div class="max-w-7xl mx-auto p-6">
      <!-- Loading Overlay -->
      <div
        id="loadingOverlay"
        class="fixed inset-0 bg-gray-900 bg-opacity-50 z-50 hidden items-center justify-center"
      >
        <div
          class="bg-white rounded-lg p-8 flex flex-col items-center max-w-sm mx-4"
        >
          <div
            class="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mb-4"
          ></div>
          <div
            class="text-lg font-medium text-gray-900 text-center"
            id="loadingText"
          >
            Loading jobs data...
          </div>
          <div
            class="text-sm text-gray-500 mt-2 text-center"
            id="loadingSubtext"
          >
            Please wait while we fetch the data
          </div>
        </div>
      </div>

      <!-- Refresh Loading Indicator -->
      <div id="refreshLoading" class="hidden">
        <div class="bg-blue-50 border border-blue-200 rounded-lg p-4 mb-6">
          <div class="flex items-center">
            <div
              class="animate-spin rounded-full h-5 w-5 border-b-2 border-blue-600 mr-3"
            ></div>
            <div class="text-blue-800">
              <div class="font-medium">Refreshing data...</div>
              <div class="text-sm">Fetching latest jobs information</div>
            </div>
          </div>
        </div>
      </div>

      <div class="bg-white rounded-lg shadow-lg overflow-hidden">
        <!-- Navigation Header -->
        <nav class="bg-white border-b border-gray-200 shadow-sm">
          <div class="px-4 lg:px-8 py-4">
            <div class="flex justify-between items-center">
              <!-- Logo/Brand -->
              <div class="flex items-center space-x-2 lg:space-x-4">
                <div class="text-xl lg:text-2xl font-bold text-blue-600">
                  CloudPanel
                </div>
                <span class="text-gray-400 hidden sm:inline">|</span>
                <span class="text-gray-600 font-medium hidden sm:inline"
                  >API Management</span
                >
              </div>

              <!-- Navigation Menu -->
              <div class="flex items-center space-x-2 lg:space-x-6">
                <a
                  href="/docs"
                  class="flex items-center px-2 lg:px-4 py-2 text-gray-600 hover:text-blue-600 hover:bg-gray-50 rounded-lg font-medium transition-all duration-200 text-sm lg:text-base"
                >
                  <svg
                    class="w-4 h-4 lg:w-5 lg:h-5 mr-1 lg:mr-2"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"
                    ></path>
                  </svg>
                  <span class="hidden sm:inline">Docs</span>
                </a>
                <a
                  href="/lists/minimal"
                  class="flex items-center px-2 lg:px-4 py-2 text-gray-600 hover:text-blue-600 hover:bg-gray-50 rounded-lg font-medium transition-all duration-200 text-sm lg:text-base"
                >
                  <svg
                    class="w-4 h-4 lg:w-5 lg:h-5 mr-1 lg:mr-2"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"
                    ></path>
                  </svg>
                  <span class="hidden sm:inline">Sites</span>
                </a>
                <a
                  href="/jobs/monitor"
                  class="flex items-center px-2 lg:px-4 py-2 text-blue-600 bg-blue-50 rounded-lg font-medium transition-all duration-200 hover:bg-blue-100 text-sm lg:text-base"
                >
                  <svg
                    class="w-4 h-4 lg:w-5 lg:h-5 mr-1 lg:mr-2"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M9 5H7a2 2 0 00-2 2v6a2 2 0 002 2h2m0 0h2m-2 0v4a2 2 0 002 2h2a2 2 0 002-2v-4m0 0V9a2 2 0 00-2-2H9a2 2 0 00-2 2v6z"
                    ></path>
                  </svg>
                  <span class="hidden sm:inline">Jobs Monitor</span>
                </a>
                <a
                  href="/logs"
                  class="flex items-center px-2 lg:px-4 py-2 text-gray-600 hover:text-blue-600 hover:bg-gray-50 rounded-lg font-medium transition-all duration-200 text-sm lg:text-base"
                >
                  <svg
                    class="w-4 h-4 lg:w-5 lg:h-5 mr-1 lg:mr-2"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
                    ></path>
                  </svg>
                  <span class="hidden sm:inline">Logs</span>
                </a>

                <!-- User Menu -->
                <div class="relative group">
                  <button
                    class="flex items-center px-2 lg:px-4 py-2 text-gray-600 hover:text-blue-600 hover:bg-gray-50 rounded-lg font-medium transition-all duration-200 text-sm lg:text-base"
                  >
                    <svg
                      class="w-4 h-4 lg:w-5 lg:h-5 mr-1 lg:mr-2"
                      fill="none"
                      stroke="currentColor"
                      viewBox="0 0 24 24"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"
                      ></path>
                    </svg>
                    <span class="hidden sm:inline">Account</span>
                    <svg
                      class="w-3 h-3 lg:w-4 lg:h-4 ml-1"
                      fill="none"
                      stroke="currentColor"
                      viewBox="0 0 24 24"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M19 9l-7 7-7-7"
                      ></path>
                    </svg>
                  </button>

                  <!-- Dropdown Menu -->
                  <div
                    class="absolute right-0 mt-2 w-48 bg-white rounded-lg shadow-lg border border-gray-200 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 z-10"
                  >
                    <div class="py-2">
                      <a
                        href="/auth/logout"
                        class="block px-4 py-2 text-red-600 hover:bg-red-50 transition-colors duration-200 text-sm"
                      >
                        <svg
                          class="w-4 h-4 inline mr-2"
                          fill="none"
                          stroke="currentColor"
                          viewBox="0 0 24 24"
                        >
                          <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"
                          ></path>
                        </svg>
                        Logout
                      </a>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </nav>

        <!-- Header -->
        <div
          class="relative bg-gradient-to-r from-purple-600 to-blue-600 text-white p-4 lg:p-8 text-center"
        >
          <h1 class="text-2xl lg:text-3xl font-bold mb-2">Jobs Queue Monitor</h1>
          <p class="text-blue-100 text-sm lg:text-base">
            Real-time monitoring of job queue processes and their status
          </p>
          <div class="mt-4 flex justify-center items-center space-x-2">
            <div class="w-2 h-2 bg-green-400 rounded-full animate-pulse"></div>
            <span class="text-sm text-blue-100">Auto-refresh every 3 seconds</span>
          </div>
        </div>

        <div class="p-4 lg:p-8">
          <!-- Stats Cards -->
          <div class="grid grid-cols-2 lg:grid-cols-5 gap-4 lg:gap-6 mb-8">
            <div
              class="bg-blue-50 border border-blue-200 rounded-lg p-4 lg:p-6"
            >
              <div class="flex items-center">
                <div class="p-2 lg:p-3 bg-blue-500 rounded-lg">
                  <svg
                    class="w-4 h-4 lg:w-6 lg:h-6 text-white"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M9 5H7a2 2 0 00-2 2v6a2 2 0 002 2h2m0 0h2m-2 0v4a2 2 0 002 2h2a2 2 0 002-2v-4m0 0V9a2 2 0 00-2-2H9a2 2 0 00-2 2v6z"
                    ></path>
                  </svg>
                </div>
                <div class="ml-3 lg:ml-4">
                  <p class="text-sm lg:text-base text-blue-600 font-medium">
                    Total Jobs
                  </p>
                  <p
                    class="text-lg lg:text-2xl font-bold text-blue-900"
                    id="total-jobs"
                  >
                    <%= stats.total %>
                  </p>
                </div>
              </div>
            </div>

            <div class="bg-yellow-50 border border-yellow-200 rounded-lg p-4 lg:p-6">
              <div class="flex items-center">
                <div class="p-2 lg:p-3 bg-yellow-500 rounded-lg">
                  <svg
                    class="w-4 h-4 lg:w-6 lg:h-6 text-white"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"
                    ></path>
                  </svg>
                </div>
                <div class="ml-3 lg:ml-4">
                  <p class="text-sm lg:text-base text-yellow-600 font-medium">
                    Pending
                  </p>
                  <p
                    class="text-lg lg:text-2xl font-bold text-yellow-900"
                    id="pending-jobs"
                  >
                    <%= stats.pending %>
                  </p>
                </div>
              </div>
            </div>

            <div class="bg-orange-50 border border-orange-200 rounded-lg p-4 lg:p-6">
              <div class="flex items-center">
                <div class="p-2 lg:p-3 bg-orange-500 rounded-lg">
                  <svg
                    class="w-4 h-4 lg:w-6 lg:h-6 text-white"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"
                    ></path>
                  </svg>
                </div>
                <div class="ml-3 lg:ml-4">
                  <p class="text-sm lg:text-base text-orange-600 font-medium">
                    Processing
                  </p>
                  <p
                    class="text-lg lg:text-2xl font-bold text-orange-900 animate-pulse-slow"
                    id="processing-jobs"
                  >
                    <%= stats.processing %>
                  </p>
                </div>
              </div>
            </div>

            <div class="bg-green-50 border border-green-200 rounded-lg p-4 lg:p-6">
              <div class="flex items-center">
                <div class="p-2 lg:p-3 bg-green-500 rounded-lg">
                  <svg
                    class="w-4 h-4 lg:w-6 lg:h-6 text-white"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M5 13l4 4L19 7"
                    ></path>
                  </svg>
                </div>
                <div class="ml-3 lg:ml-4">
                  <p class="text-sm lg:text-base text-green-600 font-medium">
                    Completed
                  </p>
                  <p
                    class="text-lg lg:text-2xl font-bold text-green-900"
                    id="completed-jobs"
                  >
                    <%= stats.completed %>
                  </p>
                </div>
              </div>
            </div>

            <div class="bg-red-50 border border-red-200 rounded-lg p-4 lg:p-6">
              <div class="flex items-center">
                <div class="p-2 lg:p-3 bg-red-500 rounded-lg">
                  <svg
                    class="w-4 h-4 lg:w-6 lg:h-6 text-white"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M6 18L18 6M6 6l12 12"
                    ></path>
                  </svg>
                </div>
                <div class="ml-3 lg:ml-4">
                  <p class="text-sm lg:text-base text-red-600 font-medium">
                    Failed
                  </p>
                  <p
                    class="text-lg lg:text-2xl font-bold text-red-900"
                    id="failed-jobs"
                  >
                    <%= stats.failed %>
                  </p>
                </div>
              </div>
            </div>
          </div>

          <!-- Jobs Table -->
          <div
            class="bg-white rounded-lg border border-gray-200 overflow-hidden"
          >
            <div
              class="px-4 lg:px-6 py-4 border-b border-gray-200"
            >
              <div class="flex flex-col lg:flex-row lg:justify-between lg:items-center space-y-4 lg:space-y-0">
                <h3 class="text-lg font-semibold text-gray-900">Jobs List</h3>
                
                <!-- Search and Filter Section -->
                <div class="flex flex-col sm:flex-row space-y-3 sm:space-y-0 sm:space-x-3">
                  <!-- Status Filter -->
                  <select
                    id="statusFilter"
                    onchange="filterJobs()"
                    class="block w-full sm:w-auto px-3 py-2 border border-gray-300 rounded-md leading-5 bg-white focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500 text-sm"
                  >
                    <option value="">All Status</option>
                    <option value="pending">Pending</option>
                    <option value="processing">Processing</option>
                    <option value="completed">Completed</option>
                    <option value="failed">Failed</option>
                  </select>
                  
                  <!-- Type Filter -->
                  <select
                    id="typeFilter"
                    onchange="filterJobs()"
                    class="block w-full sm:w-auto px-3 py-2 border border-gray-300 rounded-md leading-5 bg-white focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500 text-sm"
                  >
                    <option value="">All Types</option>
                    <option value="setup_laravel">Setup Laravel</option>
                    <option value="setup_laravel_step">Setup Laravel Step</option>
                    <option value="git_pull">Git Pull</option>
                  </select>
                  
                  <!-- Search Input -->
                  <div class="relative">
                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                      <svg class="h-4 w-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                      </svg>
                    </div>
                    <input
                      type="text"
                      id="searchInput"
                      placeholder="Search jobs..."
                      class="block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md leading-5 bg-white placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-1 focus:ring-blue-500 focus:border-blue-500 text-sm"
                      oninput="filterJobs()"
                    />
                  </div>
                  
                  <!-- Clear Filters Button -->
                  <button
                    id="clearFiltersBtn"
                    onclick="clearFilters()"
                    class="hidden inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200"
                  >
                    <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                    Clear
                  </button>
                  
                  <!-- Manual Refresh Button -->
                  <button
                    onclick="refreshData()"
                    class="inline-flex items-center px-3 py-2 border border-blue-300 shadow-sm text-sm leading-4 font-medium rounded-md text-blue-700 bg-blue-50 hover:bg-blue-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200"
                  >
                    <svg
                      class="w-4 h-4 mr-2"
                      fill="none"
                      stroke="currentColor"
                      viewBox="0 0 24 24"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"
                      ></path>
                    </svg>
                    Refresh
                  </button>
                </div>
              </div>
              
              <!-- Filter Results Info -->
              <div id="filterInfo" class="hidden mt-3 text-sm text-gray-600">
                <span id="filterResultsText"></span>
              </div>
            </div>

            <div class="overflow-x-auto">
              <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                  <tr>
                    <th
                      scope="col"
                      class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                    >
                      Job ID
                    </th>
                    <th
                      scope="col"
                      class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                    >
                      Type
                    </th>
                    <th
                      scope="col"
                      class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                    >
                      Status
                    </th>
                    <th
                      scope="col"
                      class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                    >
                      Data
                    </th>
                    <th
                      scope="col"
                      class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                    >
                      Created
                    </th>

                    <th
                      scope="col"
                      class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                    >
                      Actions
                    </th>
                  </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200" id="jobsTableBody">
                  <% jobsData.forEach(function(job) { %>
                  <tr class="hover:bg-gray-50 transition-colors duration-200 job-row" 
                      data-status="<%= job.status %>" 
                      data-type="<%= job.type %>" 
                      data-search="<%= job.id %> <%= job.type %> <%= job.status %> <%= JSON.stringify(job.data) %>">
                    <td class="px-6 py-4 whitespace-nowrap">
                      <div class="flex items-center">
                        <div class="text-sm font-medium text-gray-900">#<%= job.id %></div>
                      </div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                      <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium
                        <% if (job.type === 'setup_laravel') { %>
                          bg-purple-100 text-purple-800
                        <% } else if (job.type === 'setup_laravel_step') { %>
                          bg-indigo-100 text-indigo-800
                        <% } else if (job.type === 'git_pull') { %>
                          bg-blue-100 text-blue-800
                        <% } else { %>
                          bg-gray-100 text-gray-800
                        <% } %>
                      ">
                        <%= job.type %>
                      </span>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">
                      <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium
                        <% if (job.status === 'pending') { %>
                          bg-yellow-100 text-yellow-800
                        <% } else if (job.status === 'processing') { %>
                          bg-orange-100 text-orange-800 animate-pulse
                        <% } else if (job.status === 'completed') { %>
                          bg-green-100 text-green-800
                        <% } else if (job.status === 'failed') { %>
                          bg-red-100 text-red-800
                        <% } else { %>
                          bg-gray-100 text-gray-800
                        <% } %>
                      ">
                        <% if (job.status === 'processing') { %>
                          <svg class="w-3 h-3 mr-1 animate-spin" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
                          </svg>
                        <% } %>
                        <%= job.status %>
                      </span>
                    </td>
                    <td class="px-6 py-4">
                      <div class="text-sm text-gray-900 max-w-xs truncate">
                        <% if (job.data && typeof job.data === 'object') { %>
                          <% if (job.data.domain) { %>
                            <strong>Domain:</strong> <%= job.data.domain %>
                          <% } else if (job.data.site_name) { %>
                            <strong>Site:</strong> <%= job.data.site_name %>
                          <% } else if (job.data.user) { %>
                            <strong>User:</strong> <%= job.data.user %>
                          <% } else { %>
                            <%= Object.keys(job.data).slice(0, 2).map(key => key + ': ' + job.data[key]).join(', ') %>
                          <% } %>
                        <% } else { %>
                          <span class="text-gray-500">No data</span>
                        <% } %>
                      </div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                      <%= job.created_at_formatted %>
                    </td>

                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                      <button
                        onclick="viewJobDetails('<%= job.id %>')"
                        class="text-blue-600 hover:text-blue-900 transition-colors duration-200"
                      >
                        View Details
                      </button>
                    </td>
                  </tr>
                  <% }); %>
                </tbody>
              </table>
              
              <!-- Empty State -->
              <div id="emptyState" class="hidden text-center py-12">
                <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v6a2 2 0 002 2h2m0 0h2m-2 0v4a2 2 0 002 2h2a2 2 0 002-2v-4m0 0V9a2 2 0 00-2-2H9a2 2 0 00-2 2v6z"></path>
                </svg>
                <h3 class="mt-2 text-sm font-medium text-gray-900">No jobs found</h3>
                <p class="mt-1 text-sm text-gray-500">No jobs match your current filters.</p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Job Details Modal -->
    <div id="jobModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden z-50">
      <div class="relative top-20 mx-auto p-5 border w-11/12 md:w-3/4 lg:w-1/2 shadow-lg rounded-md bg-white">
        <div class="mt-3">
          <div class="flex justify-between items-center mb-4">
            <h3 class="text-lg font-medium text-gray-900" id="modalTitle">Job Details</h3>
            <button onclick="closeJobModal()" class="text-gray-400 hover:text-gray-600">
              <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
              </svg>
            </button>
          </div>
          <div id="modalContent" class="space-y-4">
            <!-- Content will be loaded here -->
          </div>
        </div>
      </div>
    </div>

    <script>
      let autoRefreshInterval;
      refreshData();
      let allJobsData = <%- JSON.stringify(jobsData) %>;
      console.log(allJobsData);
      // Auto-refresh functionality
      function startAutoRefresh() {
        autoRefreshInterval = setInterval(refreshData, 3000); // Refresh every 5 seconds
      }
      
      function stopAutoRefresh() {
        if (autoRefreshInterval) {
          clearInterval(autoRefreshInterval);
        }
      }
      
      // Refresh data function
      async function refreshData() {
        try {
          // document.getElementById('refreshLoading').classList.remove('hidden');
          
          const response = await fetch('/jobs/api/jobs');
          const result = await response.json();
          
          if (result.success) {
            allJobsData = result.data;
            updateStats(result.stats);
            updateJobsTable(result.data);
            filterJobs(); // Reapply current filters
          }
        } catch (error) {
          console.error('Failed to refresh data:', error);
        } finally {
          // document.getElementById('refreshLoading').classList.add('hidden');
        }
      }
      
      // Update statistics
      function updateStats(stats) {
        document.getElementById('total-jobs').textContent = stats.total;
        document.getElementById('pending-jobs').textContent = stats.pending;
        document.getElementById('processing-jobs').textContent = stats.processing;
        document.getElementById('completed-jobs').textContent = stats.completed;
        document.getElementById('failed-jobs').textContent = stats.failed;
      }
      
      // Update jobs table
      function updateJobsTable(jobs) {
        const tbody = document.getElementById('jobsTableBody');
        tbody.innerHTML = '';
        
        jobs.forEach(job => {
          const row = createJobRow(job);
          tbody.appendChild(row);
        });
      }
      
      // Create job row
      function createJobRow(job) {
        const row = document.createElement('tr');
        row.className = 'hover:bg-gray-50 transition-colors duration-200 job-row';
        row.setAttribute('data-status', job.status);
        row.setAttribute('data-type', job.type);
        row.setAttribute('data-search', `${job.id} ${job.type} ${job.status} ${JSON.stringify(job.data)}`);
        
        const statusClass = getStatusClass(job.status);
        const typeClass = getTypeClass(job.type);

        
        const dataDisplay = job.data && typeof job.data === 'object' ? 
          (job.data.domain ? '<strong>Domain:</strong> ' + job.data.domain :
           job.data.site_name ? '<strong>Site:</strong> ' + job.data.site_name :
           job.data.user ? '<strong>User:</strong> ' + job.data.user :
           Object.keys(job.data).slice(0, 2).map(key => key + ': ' + job.data[key]).join(', ')) :
          '<span class="text-gray-500">No data</span>';
        
        row.innerHTML = 
          '<td class="px-6 py-4 whitespace-nowrap">' +
            '<div class="text-sm font-medium text-gray-900">#' + job.id + '</div>' +
          '</td>' +
          '<td class="px-6 py-4 whitespace-nowrap">' +
            '<span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ' + typeClass + '">' +
              job.type +
            '</span>' +
          '</td>' +
          '<td class="px-6 py-4 whitespace-nowrap">' +
            '<span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ' + statusClass + '">' +
              (job.status === 'processing' ? '<svg class="w-3 h-3 mr-1 animate-spin" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path></svg>' : '') +
              job.status +
            '</span>' +
          '</td>' +
          '<td class="px-6 py-4">' +
            '<div class="text-sm text-gray-900 max-w-xs truncate">' +
              dataDisplay +
            '</div>' +
          '</td>' +
          '<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">' +
            new Date(job.created_at).toLocaleString('id-ID') +
          '</td>' +

          '<td class="px-6 py-4 whitespace-nowrap text-sm font-medium">' +
            '<div class="flex space-x-2">' +
              '<button onclick="viewJobDetails(' + job.id + ')" class="text-blue-600 hover:text-blue-900 transition-colors duration-200">' +
                'View Details' +
              '</button>' +
              (job.status === 'processing' ? 
                '<button onclick="cancelJob(' + job.id + ')" class="text-red-600 hover:text-red-900 transition-colors duration-200 ml-2">' +
                  'Cancel' +
                '</button>' : '') +
            '</div>' +
          '</td>';
        
        return row;
      }
      
      // Get status class
      function getStatusClass(status) {
        switch(status) {
          case 'pending': return 'bg-yellow-100 text-yellow-800';
          case 'processing': return 'bg-orange-100 text-orange-800 animate-pulse';
          case 'completed': return 'bg-green-100 text-green-800';
          case 'failed': return 'bg-red-100 text-red-800';
          default: return 'bg-gray-100 text-gray-800';
        }
      }
      
      // Get type class
      function getTypeClass(type) {
        switch(type) {
          case 'setup_laravel': return 'bg-purple-100 text-purple-800';
          case 'setup_laravel_step': return 'bg-indigo-100 text-indigo-800';
          case 'git_pull': return 'bg-blue-100 text-blue-800';
          default: return 'bg-gray-100 text-gray-800';
        }
      }
      
      // Filter jobs
      function filterJobs() {
        const statusFilter = document.getElementById('statusFilter').value;
        const typeFilter = document.getElementById('typeFilter').value;
        const searchInput = document.getElementById('searchInput').value.toLowerCase();
        
        const rows = document.querySelectorAll('.job-row');
        let visibleCount = 0;
        
        rows.forEach(row => {
          const status = row.getAttribute('data-status');
          const type = row.getAttribute('data-type');
          const searchData = row.getAttribute('data-search').toLowerCase();
          
          const statusMatch = !statusFilter || status === statusFilter;
          const typeMatch = !typeFilter || type === typeFilter;
          const searchMatch = !searchInput || searchData.includes(searchInput);
          
          if (statusMatch && typeMatch && searchMatch) {
            row.style.display = '';
            visibleCount++;
          } else {
            row.style.display = 'none';
          }
        });
        
        // Show/hide empty state
        const emptyState = document.getElementById('emptyState');
        const tableBody = document.getElementById('jobsTableBody');
        
        if (visibleCount === 0) {
          emptyState.classList.remove('hidden');
          tableBody.style.display = 'none';
        } else {
          emptyState.classList.add('hidden');
          tableBody.style.display = '';
        }
        
        // Show/hide clear filters button
        const clearBtn = document.getElementById('clearFiltersBtn');
        if (statusFilter || typeFilter || searchInput) {
          clearBtn.classList.remove('hidden');
        } else {
          clearBtn.classList.add('hidden');
        }
        
        // Update filter info
        updateFilterInfo(visibleCount, rows.length);
      }
      
      // Update filter info
      function updateFilterInfo(visible, total) {
        const filterInfo = document.getElementById('filterInfo');
        const filterText = document.getElementById('filterResultsText');
        
        if (visible !== total) {
          filterInfo.classList.remove('hidden');
          filterText.textContent = `Showing ${visible} of ${total} jobs`;
        } else {
          filterInfo.classList.add('hidden');
        }
      }
      
      // Clear filters
      function clearFilters() {
        document.getElementById('statusFilter').value = '';
        document.getElementById('typeFilter').value = '';
        document.getElementById('searchInput').value = '';
        filterJobs();
      }
      
      // View job details
      async function viewJobDetails(jobId) {
        try {
          const response = await fetch(`/jobs/api/jobs/${jobId}`);
          const result = await response.json();
          
          if (result.success) {
            showJobModal(result.data);
          } else {
            alert('Failed to load job details');
          }
        } catch (error) {
          console.error('Failed to load job details:', error);
          alert('Failed to load job details');
        }
      }
      
      // Show job modal
      function showJobModal(job) {
        const modal = document.getElementById('jobModal');
        const title = document.getElementById('modalTitle');
        const content = document.getElementById('modalContent');
        
        title.textContent = `Job #${job.id} Details`;
        

        
        content.innerHTML = 
          '<div class="grid grid-cols-1 md:grid-cols-2 gap-4">' +
            '<div>' +
              '<label class="block text-sm font-medium text-gray-700">Job ID</label>' +
              '<p class="mt-1 text-sm text-gray-900">#' + job.id + '</p>' +
            '</div>' +
            '<div>' +
              '<label class="block text-sm font-medium text-gray-700">Type</label>' +
              '<p class="mt-1 text-sm text-gray-900">' + job.type + '</p>' +
            '</div>' +
            '<div>' +
              '<label class="block text-sm font-medium text-gray-700">Status</label>' +
              '<p class="mt-1">' +
                '<span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ' + getStatusClass(job.status) + '">' +
                  job.status +
                '</span>' +
              '</p>' +
            '</div>' +

            '<div>' +
              '<label class="block text-sm font-medium text-gray-700">Created At</label>' +
              '<p class="mt-1 text-sm text-gray-900">' + new Date(job.created_at).toLocaleString('id-ID') + '</p>' +
            '</div>' +
            '<div>' +
              '<label class="block text-sm font-medium text-gray-700">Updated At</label>' +
              '<p class="mt-1 text-sm text-gray-900">' + (job.updated_at ? new Date(job.updated_at).toLocaleString('id-ID') : 'N/A') + '</p>' +
            '</div>' +
          '</div>' +
          
          '<div class="mt-4">' +
            '<label class="block text-sm font-medium text-gray-700">Job Data</label>' +
            '<pre class="mt-1 text-sm text-gray-900 bg-gray-50 p-3 rounded-md overflow-auto max-h-40">' + JSON.stringify(job.data, null, 2) + '</pre>' +
          '</div>' +
          
          (job.result ? 
          '<div class="mt-4">' +
            '<label class="block text-sm font-medium text-gray-700">Result</label>' +
            '<pre class="mt-1 text-sm text-gray-900 bg-gray-50 p-3 rounded-md overflow-auto max-h-40">' + JSON.stringify(job.result, null, 2) + '</pre>' +
          '</div>' : '');
        
        modal.classList.remove('hidden');
      }
      
      // Cancel job function
      async function cancelJob(jobId) {
        if (!confirm('Apakah Anda yakin ingin membatalkan job ini?')) {
          return;
        }
        
        try {
          const response = await fetch(`/jobs/api/jobs/${jobId}/cancel`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            }
          });
          
          const result = await response.json();
          
          if (result.success) {
            alert('Job berhasil dibatalkan');
            refreshData(); // Refresh data to show updated status
          } else {
            alert('Gagal membatalkan job: ' + (result.message || 'Unknown error'));
          }
        } catch (error) {
          console.error('Error canceling job:', error);
          alert('Terjadi kesalahan saat membatalkan job');
        }
      }
      
      // Close job modal
      function closeJobModal() {
        document.getElementById('jobModal').classList.add('hidden');
      }
      
      // Initialize page
      document.addEventListener('DOMContentLoaded', function() {
        startAutoRefresh();
        
        // Close modal when clicking outside
        document.getElementById('jobModal').addEventListener('click', function(e) {
          if (e.target === this) {
            closeJobModal();
          }
        });
      });
      
      // Stop auto-refresh when page is hidden
      document.addEventListener('visibilitychange', function() {
        if (document.hidden) {
          stopAutoRefresh();
        } else {
          startAutoRefresh();
        }
      });
    </script>
  </body>
</html>